<entityStoreData xmlns="http://www.vordel.com/2005/06/24/entityStore">
<metaInfo flags="138">
	<exportRoots>
		<key type='CircuitContainer'>
			<id field='name' value='Training'/>
			<key type='CircuitContainer'>
				<id field='name' value='OAuth 2.0'/>
				<key type='FilterCircuit'>
					<id field='name' value='Token Transformer'/>
				</key>
			</key>
		</key>
		<key type='ESConfiguration'>
			<id field='name' value='Entity Store Configuration'/>
		</key>
	</exportRoots>
	<typeVersions>
		<type name="CircuitContainer" version="1"/>
		<type name="ESConfiguration" version="30"/>
		<type name="Entity" version="0"/>
		<type name="Filter" version="5"/>
		<type name="FilterCircuit" version="4"/>
		<type name="JWSGeneratorFilter" version="1"/>
		<type name="JavaScriptFilter" version="3"/>
		<type name="RootChild" version="0"/>
	</typeVersions>
	<realizedTypes><![CDATA[
<entityStoreData>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="RootChild"/>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="ESConfiguration">
        <constant name="_version" type="integer" value="30"/>
        <!--
            Give this singleton a key.
        -->
        <field isKey="true" name="name" type="string"/>
        <!-- 
            We use this field to verify that the passphrase for the 
            encryped data is synchronized between the server and client, and
            between multiple invocations of the client
        -->
        <field name="passphraseTest" type="encrypted"/>
        <field name="version" type="string"/>
        <!-- The product key should never change for the lifetime of the product -->
        <field name="productKey" type="string"/>
        <field cardinality="?" name="gitrev" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="CircuitContainer">
    <constant name="_version" type="integer" value="1"/>
    <componentType cardinality="*" name="FilterCircuit"/>
    <componentType cardinality="*" name="CircuitContainer"/>
    <componentType cardinality="*" name="MVProperty"/>
    <field isKey="true" name="name" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="FilterCircuit">
        <constant name="_version" type="integer" value="4"/>
		<componentType cardinality="*" name="Filter"/>
		<componentType cardinality="1" name="BoundCircuit"/>
		<componentType cardinality="*" name="Property"/>
		<field cardinality="1" name="start" type="@Filter"/>
		<field cardinality="?" name="fault" type="@Filter"/>
		<field isKey="true" name="name" type="string"/>
		<field cardinality="1" default="3" name="logMask" type="integer"/>

		<field cardinality="?" name="description" type="string"/>		
		<field cardinality="1" name="category" type="@PolicyCategory">
            <defaultRef>
                <key type="PolicyCategoryGroup">
                  <id field="name" value="Policy Categories"/>
                  <key type="PolicyCategory">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="Filter">
        <constant name="_version" type="integer" value="5"/>
        <field cardinality="?" name="successNode" type="@Filter"/>
        <field cardinality="?" name="failureNode" type="@Filter"/>
        <field isKey="true" name="name" type="string"/>
        <field cardinality="1" default="2" name="logMask" type="integer"/>
        <field cardinality="1" default="Filter aborted due to exception" name="logFatal" type="string"/>
        <field cardinality="1" default="Filter failed" name="logFailure" type="string"/>
        <field cardinality="1" default="Filter passed" name="logSuccess" type="string"/>
        <field cardinality="1" name="category" type="@Category">
            <defaultRef>
                <key type="CategoryGroup">
                  <id field="name" value="Filter Categories"/>
                  <key type="Category">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
      <field cardinality="1" default="0" name="abortProcessingOnLogError" type="boolean"/>
      <field cardinality="1" default="SERVICE" name="logMaskType" type="string"/>
      <field cardinality="*" name="classloader" type="^ClassLoader"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="JWSGeneratorFilter">
<constant name="class" type="string" value="com.vordel.circuit.ext.filter.quick.QuickJavaFilter"/>
<constant name="_version" type="string" value="1"/>
<constant name="displayName" type="string" value="Generate Json Web Signature"/>
<constant name="description" type="string" value="Generate a signed JWT or JWS object"/>
<constant name="icon" type="string" value="xmlsig"/>
<constant name="palette" type="string" value="Integrity"/>
<constant name="required" type="string" value="http.headers,content.body"/>
<constant name="resources" type="string" value="#Thu Apr 02 10:52:16 CEST 2020&#10;SIGNATURE_ADVANCED_TAB=Advanced (JWS/JWT)&#10;CLAIM_OIDCH_LABEL=Authorization Code (generate 'c_hash' half hash)&#10;SIGNATURE_ALGORITHMFIXED=Manually specify algorithm&#10;OUTPUT_ATTRIBUTENAME_LABEL=Attribute name&#10;CLAIM_OIDATH_LABEL=Access Token (generate 'at_hash' half hash)&#10;SIGNATURE_OUTPUT_TAB=Signature Output&#10;FILTER_DISPLAYNAME=Generate Json Web Signature&#10;CLAIM_EXP_LABEL=Delay before expiration 'exp' (relative to 'nbf')&#10;SIGNATURE_JWSPAYLOAD_TAB=Signature Payload&#10;CLAIM_AUD_LABEL=Audience 'aud'&#10;SIGNATURE_KEYSELECTOR=Use Selector expression&#10;CLAIM_CRIT_LABEL=Critical extensions 'crit'&#10;CLAIM_JWK_LABEL=Embed all key related claims in the 'jwk' claim (except for 'jku')&#10;CLAIM_DEF_LABEL=Deflate body before signing (non standard)&#10;SIGNATURE_OUTATTRIBUTE=Set an attribute with the generated signature&#10;CLAIM_NBF_LABEL=Delay before usage 'nbf' (relative to system time)&#10;CLAIM_JKU_LABEL=JWK Set URL&#10;SIGNATURE_JWTTEMPLATE_LABEL=JSON Template&#10;SIGNATURE_ALGORITHM_GROUP=Algorithm selection&#10;SIGNATURE_CERTIFICATE_LABEL=Signer Certificate&#10;SIGNATURE_JWTCLAIMS_LABEL=JWT Claims&#10;SIGNATURE_PRIVATEKEY_LABEL=External Certificate Private Key&#10;CLAIMS_AUD_LABEL=Alternate JWT Audiences&#10;FILTER_CATEGORY=Integrity&#10;OUTPUT_HEADERS_BODY=Use body headers&#10;SIGNATURE_KEYCHAIN_LABEL=External Certificate Chain&#10;SIGNATURE_ALGORITHMLEVEL_LABEL=Discover algorithm level (256, 384 or 512)&#10;CLAIM_X5C_LABEL=Include 'x5c' certificate chain&#10;CLAIM_ISS_LABEL=Issuer 'iss'&#10;CLAIM_X5U_LABEL=Include 'x5u' certificate URL&#10;CLAIM_X5T_LABEL=Generate 'x5t' thumbprint&#10;CLAIM_KID_LABEL=Include 'kid' claim if a key ID is available&#10;SIGNATURE_ALGORITHMFIXED_LABEL=Algorithm&#10;QUICKFILTER_REQUIRED=http.headers,content.body&#10;SIGNATURE_JWSHEADER_TAB=Signature JOSE Header&#10;OUTPUT_HEADER_OVERWRITE=Overwrite existing value&#10;SIGNATURE_KEYID_X5T256=Compute Certificate x5t\#256&#10;SIGNATURE_KEY_GROUP=Key Selection&#10;CLAIM_TYP_LABEL=Generate 'typ' claim&#10;SIGNATURE_OUTBODY=Set the generated signature as body&#10;SIGNATURE_OPENID_GROUP=OpenID Special claims&#10;SIGNATURE_JWSCERTIFICATE_GROUP=Certificate specific header claims&#10;SIGNATURE_ALGORITHM_TAB=Signature Key and Algorithm&#10;FILTER_DESCRIPTION=Generate a signed JWT or JWS object&#10;SIGNATURE_KEYSELECTOR_LABEL=Key&#10;SIGNATURE_OUTHEADER=Add the generated signature to an HTTP header&#10;CLAIM_X5T256_LABEL=Generate 'x5t\#256' thumbprint&#10;JWSEXTENSIONPOLICY_TITLE=Select a policy to extend the JWS Header&#10;OUTPUT_HEADERNAME_LABEL=Header name&#10;JWSPAYLOAD_LIFETIME_GROUP=JWS lifetime offsets (in seconds)&#10;SIGNATURE_KEYID_X5T=Compute Certificate x5t&#10;OUTPUT_HEADERS_MESSAGE=Use message headers&#10;JWTEXTENSIONPOLICY_TITLE=Select a policy to extend the JWT Payload&#10;FILTER_ICON=xmlsig&#10;SIGNATURE_KEYID_ALIAS=Use Certificate Alias&#10;SIGNATURE_JWT=Generate JWT&#10;CLAIM_SUB_LABEL=Subject 'sub'&#10;SIGNATURE_JWS=Generate JWS from existing body&#10;SIGNATURE_KEYID_LABEL=Signature KeyId Generation&#10;SIGNATURE_KEYSELECTORID_LABEL=Key ID&#10;JWSEXTENSIONPOLICY_LABEL=Extend JWS Header using a Policy&#10;CLAIM_JTI_LABEL=ID 'jti'&#10;JWTEXTENSIONPOLICY_LABEL=Extend JWT Payload using a Policy&#10;SIGNATURE_ALGORITHMLEVEL=Discover algorithm from key&#10;CLAIM_CTY_LABEL=Generate 'cty' claim (forced for nested JWT/JWS)&#10;SIGNATURE_KEYINSTORE=Use Key from internal key store&#10;CLAIM_IAT_LABEL=Include system time 'iat'&#10;"/>
<constant name="ui" type="string" value="&lt;ui&gt;&#10;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; fill=&quot;true&quot;&gt;&#10;&#9;&#9;&lt;panel columns=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&lt;!-- filter name attribute --&gt;&#10;&#9;&#9;&#9;&lt;NameAttribute/&gt;&#10;&#9;&#9;&lt;/panel&gt;&#10;&#10;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&lt;tabFolder span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&lt;tab label=&quot;SIGNATURE_ALGORITHM_TAB&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; fill=&quot;false&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;group label=&quot;SIGNATURE_ALGORITHM_GROUP&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;RadioGroupAttribute field=&quot;signatureAlgorithmType&quot; columns=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;0&quot; label=&quot;SIGNATURE_ALGORITHMLEVEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signatureAlgorithmLevel&quot; label=&quot;SIGNATURE_ALGORITHMLEVEL_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;1&quot; label=&quot;SIGNATURE_ALGORITHMFIXED&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signatureAlgorithmFixed&quot; label=&quot;SIGNATURE_ALGORITHMFIXED_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/RadioGroupAttribute&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/group&gt;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;group label=&quot;SIGNATURE_KEY_GROUP&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;RadioGroupAttribute field=&quot;signatureKeyType&quot; columns=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;0&quot; label=&quot;SIGNATURE_KEYINSTORE&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;certSelector field=&quot;signatureCertificate&quot; label=&quot;SIGNATURE_CERTIFICATE_LABEL&quot; view=&quot;privateKey&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;group label=&quot;SIGNATURE_KEYID_LABEL&quot; columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;RadioGroupAttribute field=&quot;signatureKeyId&quot; columns=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;0&quot; label=&quot;SIGNATURE_KEYID_ALIAS&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;1&quot; label=&quot;SIGNATURE_KEYID_X5T&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;2&quot; label=&quot;SIGNATURE_KEYID_X5T256&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/RadioGroupAttribute&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/group&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;1&quot; label=&quot;SIGNATURE_KEYSELECTOR&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signatureKeySelector&quot; label=&quot;SIGNATURE_KEYSELECTOR_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signatureKeyIdSelector&quot; label=&quot;SIGNATURE_KEYSELECTORID_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/RadioGroupAttribute&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/group&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tab&gt;&#10;&#9;&#9;&#9;&#9;&lt;tab label=&quot;SIGNATURE_JWSHEADER_TAB&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; fill=&quot;false&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateTYP&quot; label=&quot;CLAIM_TYP_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateKID&quot; label=&quot;CLAIM_KID_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateJKU&quot; label=&quot;CLAIM_JKU_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;group label=&quot;SIGNATURE_JWSCERTIFICATE_GROUP&quot; columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateJWK&quot; label=&quot;CLAIM_JWK_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateX5T&quot; label=&quot;CLAIM_X5T_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateX5T256&quot; label=&quot;CLAIM_X5T256_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateX5C&quot; label=&quot;CLAIM_X5C_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateX5U&quot; label=&quot;CLAIM_X5U_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/group&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tab&gt;&#10;&#9;&#9;&#9;&#9;&lt;tab label=&quot;SIGNATURE_JWSPAYLOAD_TAB&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; fill=&quot;false&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;RadioGroupAttribute field=&quot;signaturePayloadType&quot; columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;0&quot; label=&quot;SIGNATURE_JWS&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateCTY&quot; label=&quot;CLAIM_CTY_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;deflatePayload&quot; label=&quot;CLAIM_DEF_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice span=&quot;2&quot; value=&quot;1&quot; label=&quot;SIGNATURE_JWT&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;scrollpanel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute label=&quot;SIGNATURE_JWTTEMPLATE_LABEL&quot; field=&quot;signaturePayloadSelector&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateISS&quot; label=&quot;CLAIM_ISS_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateSUB&quot; label=&quot;CLAIM_SUB_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateJTI&quot; label=&quot;CLAIM_JTI_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateAUD&quot; label=&quot;CLAIM_AUD_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;group label=&quot;JWSPAYLOAD_LIFETIME_GROUP&quot; columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateNBF&quot; label=&quot;CLAIM_NBF_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateEXP&quot; label=&quot;CLAIM_EXP_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;generateIAT&quot; label=&quot;CLAIM_IAT_LABEL&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/group&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;group label=&quot;SIGNATURE_OPENID_GROUP&quot; columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateOIDATH&quot; label=&quot;CLAIM_OIDATH_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;generateOIDCH&quot; label=&quot;CLAIM_OIDCH_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/group&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/scrollpanel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/RadioGroupAttribute&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tab&gt;&#10;&#9;&#9;&#9;&#9;&lt;tab label=&quot;SIGNATURE_ADVANCED_TAB&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; fill=&quot;false&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;FieldTable field=&quot;headerExtensions&quot; label=&quot;CLAIM_CRIT_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;FieldTable field=&quot;payloadAudiences&quot; label=&quot;CLAIMS_AUD_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signaturePrivateKeySelector&quot; label=&quot;SIGNATURE_PRIVATEKEY_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signatureKeyChainSelector&quot; label=&quot;SIGNATURE_KEYCHAIN_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ReferenceSelector field=&quot;headerExtensionCircuit&quot; selectableTypes=&quot;FilterCircuit&quot; searches=&quot;ROOT_CIRCUIT_CONTAINER,CircuitContainer&quot; label=&quot;JWSEXTENSIONPOLICY_LABEL&quot; title=&quot;JWSEXTENSIONPOLICY_TITLE&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ReferenceSelector field=&quot;payloadExtensionCircuit&quot; selectableTypes=&quot;FilterCircuit&quot; searches=&quot;ROOT_CIRCUIT_CONTAINER,CircuitContainer&quot; label=&quot;JWTEXTENSIONPOLICY_LABEL&quot; title=&quot;JWTEXTENSIONPOLICY_TITLE&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tab&gt;&#10;&#9;&#9;&#9;&#9;&lt;tab label=&quot;SIGNATURE_OUTPUT_TAB&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; fill=&quot;false&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;signatureOutputBody&quot; label=&quot;SIGNATURE_OUTBODY&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;signatureOutputAttribute&quot; label=&quot;SIGNATURE_OUTATTRIBUTE&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; label=&quot;SIGNATURE_OUTATTRIBUTE_PANEL&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;MsgAttrAttribute field=&quot;signatureOutputAttributeName&quot; label=&quot;OUTPUT_ATTRIBUTENAME_LABEL&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;signatureOutputHeader&quot; label=&quot;SIGNATURE_OUTHEADER&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;2&quot; span=&quot;2&quot; label=&quot;SIGNATURE_OUTHEADER_PANEL&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;TextAttribute field=&quot;signatureOutputHeaderName&quot; label=&quot;OUTPUT_HEADERNAME_LABEL&quot; required=&quot;false&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ButtonAttribute field=&quot;overwriteExistingHeader&quot; label=&quot;OUTPUT_HEADER_OVERWRITE&quot; span=&quot;2&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;panel columns=&quot;1&quot; span=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;RadioGroupAttribute field=&quot;signatureOutputHeaderLocation&quot; columns=&quot;2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice value=&quot;body&quot; label=&quot;OUTPUT_HEADERS_BODY&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;choice value=&quot;httpheaders&quot; label=&quot;OUTPUT_HEADERS_MESSAGE&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/RadioGroupAttribute&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;binding driver=&quot;SIGNATURE_OUTATTRIBUTE&quot; driven=&quot;SIGNATURE_OUTATTRIBUTE_PANEL&quot; class=&quot;com.vordel.client.ui.declarative.Enabler&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;binding driver=&quot;SIGNATURE_OUTHEADER&quot; driven=&quot;SIGNATURE_OUTHEADER_PANEL&quot; class=&quot;com.vordel.client.ui.declarative.Enabler&quot;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/panel&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tab&gt;&#10;&#9;&#9;&#9;&lt;/tabFolder&gt;&#10;&#9;&#9;&lt;/panel&gt;&#10;&#9;&lt;/panel&gt;&#10;&lt;/ui&gt;"/>
<constant name="_version" type="integer" value="1"/>
<field cardinality="?" name="generateNBF" type="integer"/>
<field cardinality="?" default="0" name="signatureOutputHeader" type="boolean"/>
<field cardinality="?" name="generateAUD" type="string"/>
<field cardinality="?" name="signatureCertificate" type="^Certificate"/>
<field cardinality="?" default="${signer.key.chain}" name="signatureKeyChainSelector" type="string"/>
<field cardinality="*" name="payloadAudiences" type="string"/>
<field cardinality="?" default="0" name="generateCTY" type="boolean"/>
<field cardinality="?" default="jwt.body" name="signatureOutputAttributeName" type="string"/>
<field cardinality="?" default="${openid.accesstoken}" name="generateOIDATH" type="string"/>
<field cardinality="?" default="${id}" name="generateJTI" type="string"/>
<field cardinality="?" default="${signer.private.key}" name="signaturePrivateKeySelector" type="string"/>
<field cardinality="?" name="signatureOutputHeaderName" type="string"/>
<field cardinality="?" default="0" name="generateX5C" type="boolean"/>
<field cardinality="?" name="headerExtensionCircuit" type="^FilterCircuit"/>
<field cardinality="?" name="generateEXP" type="integer"/>
<field cardinality="?" default="0" name="signatureKeyType" type="integer"/>
<field cardinality="?" default="${signer.keyId}" name="signatureKeyIdSelector" type="string"/>
<field cardinality="?" default="1" name="generateIAT" type="boolean"/>
<field cardinality="?" default="${openid.code}" name="generateOIDCH" type="string"/>
<field cardinality="?" default="256" name="signatureAlgorithmLevel" type="integer"/>
<field cardinality="?" default="0" name="signatureOutputBody" type="boolean"/>
<field cardinality="?" default="${jwkset.url}" name="generateJKU" type="string"/>
<field cardinality="?" default="${http.request.url}" name="generateISS" type="string"/>
<field cardinality="*" name="headerExtensions" type="string"/>
<field cardinality="?" default="1" name="signatureOutputAttribute" type="boolean"/>
<field cardinality="?" default="httpheaders" name="signatureOutputHeaderLocation" type="string"/>
<field cardinality="?" default="0" name="deflatePayload" type="boolean"/>
<field cardinality="?" default="0" name="generateTYP" type="boolean"/>
<field cardinality="?" default="1" name="overwriteExistingHeader" type="boolean"/>
<field cardinality="?" default="0" name="signatureKeyId" type="integer"/>
<field cardinality="?" default="0" name="signatureAlgorithmType" type="integer"/>
<field cardinality="?" default="${authentication.subject.id}" name="generateSUB" type="string"/>
<field cardinality="?" default="${signer.key}" name="signatureKeySelector" type="string"/>
<field cardinality="?" default="0" name="generateKID" type="boolean"/>
<field cardinality="?" name="signatureAlgorithmFixed" type="string"/>
<field cardinality="?" default="${certificate.rfc5080.url}" name="generateX5U" type="string"/>
<field cardinality="?" name="payloadExtensionCircuit" type="^FilterCircuit"/>
<field cardinality="?" default="0" name="generateX5T" type="boolean"/>
<field cardinality="?" default="0" name="signaturePayloadType" type="integer"/>
<field cardinality="?" default="1" name="generateX5T256" type="boolean"/>
<field cardinality="?" default="${content.body}" name="signaturePayloadSelector" type="string"/>
<field cardinality="?" default="0" name="generateJWK" type="boolean"/></entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="JavaScriptFilter">
        <constant name="_version" type="integer" value="3"/>
	<constant name="class" type="string" value="com.vordel.circuit.script.ScriptFilter"/>
	<field cardinality="1" default="function invoke(msg)         {            return true;         }" name="script" type="string"/>
	<field cardinality="1" default="nashorn" name="engineName" type="string"/>
        <field cardinality="*" name="requiredProperties" type="string"/>
        <field cardinality="*" name="generatedProperties" type="string"/>
        <field cardinality="*" name="consumedProperties" type="string"/>
	</entityType>
</entityStoreData>
	]]></realizedTypes>
</metaInfo>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='Training'/>
		<key type='CircuitContainer'>
			<id field='name' value='OAuth 2.0'/>
		</key>
	</key>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="name"><value>Token Transformer</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Training'/>
			<key type='CircuitContainer'>
				<id field='name' value='OAuth 2.0'/>
				<key type='FilterCircuit'>
					<id field='name' value='Token Transformer'/>
					<key type='JavaScriptFilter'>
						<id field='name' value='Scripting Language : Generate Json Template'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Training'/>
		<key type='CircuitContainer'>
			<id field='name' value='OAuth 2.0'/>
			<key type='FilterCircuit'>
				<id field='name' value='Token Transformer'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>groovy</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="name"><value>Scripting Language : Update token value</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="script"><value>package com.vordel.training&#xA;&#xA;import com.vordel.circuit.Message&#xA;import com.vordel.circuit.oauth.token.OAuth2AccessToken&#xA;import com.vordel.circuit.script.context.resources.SelectorResource&#xA;import com.vordel.el.Selector&#xA;&#xA;import groovy.transform.Field&#xA;&#xA;@Field private static final Selector&lt;String&gt; OAUTH_REQUESTED = SelectorResource.fromExpression(&quot;oauth.request.parsed.mapped[&apos;requested_token_type&apos;]&quot;, String.class);&#xA;&#xA;@Field private static final String ACCESS_TOKEN = &quot;urn:ietf:params:oauth:token-type:access_token&quot;;&#xA;@Field private static final String REFRESH_TOKEN = &quot;urn:ietf:params:oauth:token-type:refresh_token&quot;;&#xA;@Field private static final String JWT_TOKEN = &quot;urn:ietf:params:oauth:token-type:jwt&quot;;&#xA;&#xA;boolean invoke(Message msg) {&#xA;&#x9;String requested_token_type = OAUTH_REQUESTED.substitute(msg);&#xA;&#x9;&#xA;&#x9;OAuth2AccessToken token = msg.get(&quot;accesstoken&quot;);&#xA;&#x9;String jwt = msg.get(&quot;oauth.token.jwt&quot;);&#xA;&#x9;&#xA;&#x9;token.setValue(jwt);&#xA;&#x9;&#xA;&#x9;if ((requested_token_type != null) &amp;&amp; (ACCESS_TOKEN.equals(requested_token_type) || REFRESH_TOKEN.equals(requested_token_type) || JWT_TOKEN.equals(requested_token_type))) {&#xA;&#x9;&#x9;token.setAdditionalInformation(&quot;issued_token_type&quot;, requested_token_type);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JWSGeneratorFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Training'/>
		<key type='CircuitContainer'>
			<id field='name' value='OAuth 2.0'/>
			<key type='FilterCircuit'>
				<id field='name' value='Token Transformer'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="deflatePayload"><value>0</value></fval>
	<fval name="failureNode"><value contentType="reference">-1</value></fval>
	<fval name="generateAUD"><value></value></fval>
	<fval name="generateCTY"><value>0</value></fval>
	<fval name="generateEXP"><value>${accesstoken.getExpiresIn()}</value></fval>
	<fval name="generateIAT"><value>1</value></fval>
	<fval name="generateISS"><value>${http.request.url}</value></fval>
	<fval name="generateJKU"><value>${jwkset.url}</value></fval>
	<fval name="generateJTI"><value>${accesstoken.getValue()}</value></fval>
	<fval name="generateJWK"><value>0</value></fval>
	<fval name="generateKID"><value>0</value></fval>
	<fval name="generateNBF"><value>5</value></fval>
	<fval name="generateOIDATH"><value></value></fval>
	<fval name="generateOIDCH"><value></value></fval>
	<fval name="generateSUB"><value></value></fval>
	<fval name="generateTYP"><value>0</value></fval>
	<fval name="generateX5C"><value>0</value></fval>
	<fval name="generateX5T"><value>1</value></fval>
	<fval name="generateX5T256"><value>0</value></fval>
	<fval name="generateX5U"><value>${certificate.rfc5080.url}</value></fval>
	<fval name="headerExtensionCircuit"><value contentType="reference">-1</value></fval>
	<fval name="headerExtensions"></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="name"><value>Generate Json Web Signature : Generate Token replacement value</value></fval>
	<fval name="overwriteExistingHeader"><value>1</value></fval>
	<fval name="payloadAudiences"></fval>
	<fval name="payloadExtensionCircuit"><value contentType="reference">-1</value></fval>
	<fval name="signatureAlgorithmFixed"><value></value></fval>
	<fval name="signatureAlgorithmLevel"><value>256</value></fval>
	<fval name="signatureAlgorithmType"><value>0</value></fval>
	<fval name="signatureCertificate"><value contentType="reference">
<key type='Certificates'><id field='name' value='Certificate Store'/><key type='Certificate'><id field='dname' value='CN=Change this for production'/></key></key>	</value></fval>
	<fval name="signatureKeyChainSelector"><value>${signer.key.chain}</value></fval>
	<fval name="signatureKeyId"><value>0</value></fval>
	<fval name="signatureKeyIdSelector"><value>${signer.keyId}</value></fval>
	<fval name="signatureKeySelector"><value>${signer.key}</value></fval>
	<fval name="signatureKeyType"><value>0</value></fval>
	<fval name="signatureOutputAttribute"><value>1</value></fval>
	<fval name="signatureOutputAttributeName"><value>oauth.token.jwt</value></fval>
	<fval name="signatureOutputBody"><value>0</value></fval>
	<fval name="signatureOutputHeader"><value>0</value></fval>
	<fval name="signatureOutputHeaderLocation"><value>httpheaders</value></fval>
	<fval name="signatureOutputHeaderName"><value></value></fval>
	<fval name="signaturePayloadSelector"><value>${oauth.token.json}</value></fval>
	<fval name="signaturePayloadType"><value>1</value></fval>
	<fval name="signaturePrivateKeySelector"><value>${signer.private.key}</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Training'/>
			<key type='CircuitContainer'>
				<id field='name' value='OAuth 2.0'/>
				<key type='FilterCircuit'>
					<id field='name' value='Token Transformer'/>
					<key type='JavaScriptFilter'>
						<id field='name' value='Scripting Language : Update token value'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Training'/>
		<key type='CircuitContainer'>
			<id field='name' value='OAuth 2.0'/>
			<key type='FilterCircuit'>
				<id field='name' value='Token Transformer'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>groovy</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="name"><value>Scripting Language : Generate Json Template</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="script"><value>package com.vordel.training&#xA;&#xA;import com.fasterxml.jackson.databind.ObjectMapper&#xA;import com.fasterxml.jackson.databind.node.ObjectNode&#xA;import com.vordel.circuit.Message&#xA;import com.vordel.circuit.oauth.token.OAuth2AccessToken&#xA;import com.vordel.circuit.script.ScriptHelper&#xA;import com.vordel.circuit.script.context.resources.SelectorResource&#xA;import com.vordel.el.Selector&#xA;&#xA;import groovy.transform.Field&#xA;&#xA;@Field private static final Selector&lt;String&gt; OAUTH_AUDIENCE = SelectorResource.fromExpression(&quot;oauth.request.parsed.mapped[&apos;audience&apos;]&quot;, String.class);&#xA;@Field private static final ObjectMapper MAPPER = new ObjectMapper();&#xA;&#xA;boolean invoke(Message msg) {&#xA;&#x9;OAuth2AccessToken token = msg.get(&quot;accesstoken&quot;);&#xA;&#x9;boolean generated = false;&#xA;&#xA;&#x9;if (token != null) {&#xA;&#x9;&#x9;/* retrieve subject token */&#xA;&#x9;&#x9;OAuth2AccessToken subject = msg.get(&quot;oauth.request.subject.token&quot;);&#xA;&#x9;&#x9;ObjectNode template = MAPPER.createObjectNode();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* fetch actor token if any */&#xA;&#x9;&#x9;token = getActorToken(msg, token);&#xA;&#xA;&#x9;&#x9;if (subject != null) {&#xA;&#x9;&#x9;&#x9;/* retrieve audience and create &apos;act&apos; claim node */&#xA;&#x9;&#x9;&#x9;String audience = OAUTH_AUDIENCE.substitute(msg);&#xA;&#x9;&#x9;&#x9;ObjectNode actor = MAPPER.createObjectNode();&#xA;&#xA;&#x9;&#x9;&#x9;if (audience != null) {&#xA;&#x9;&#x9;&#x9;&#x9;/* set audience if any */&#xA;&#x9;&#x9;&#x9;&#x9;template.put(&quot;aud&quot;, audience);&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;/* add subject and actor values */&#xA;&#x9;&#x9;&#x9;template.put(&quot;sub&quot;, getTokenSubject(subject));&#xA;&#x9;&#x9;&#x9;template.set(&quot;act&quot;, actor);&#xA;&#x9;&#x9;&#x9;actor.put(&quot;sub&quot;, getTokenSubject(token));&#xA;&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;/* just add subject */&#xA;&#x9;&#x9;&#x9;template.put(&quot;sub&quot;, getTokenSubject(token));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;msg.put(&quot;oauth.token.json&quot;, ScriptHelper.toJSONBody(template));&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;generated = true;&#xA;&#x9;}&#xA;&#xA;&#x9;return generated;&#xA;}&#xA;&#xA;private static OAuth2AccessToken getActorToken(Message msg, OAuth2AccessToken token) {&#xA;&#x9;OAuth2AccessToken actor = msg.get(&quot;oauth.request.actor.token&quot;);&#xA;&#x9;&#xA;&#x9;return actor == null ? token : actor;&#xA;}&#xA;&#xA;private static String getTokenSubject(OAuth2AccessToken token) {&#xA;&#x9;String subject = token.getAuthenticationSubject();&#xA;&#xA;&#x9;return subject == null ? token.getClientID() : subject;&#xA;}&#xA;</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Training'/>
			<key type='CircuitContainer'>
				<id field='name' value='OAuth 2.0'/>
				<key type='FilterCircuit'>
					<id field='name' value='Token Transformer'/>
					<key type='JWSGeneratorFilter'>
						<id field='name' value='Generate Json Web Signature : Generate Token replacement value'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitContainer">
	<key type='CircuitContainer'>
		<id field='name' value='Training'/>
	</key>
	<fval name="name"><value>OAuth 2.0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitContainer">
	<fval name="name"><value>Training</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ESConfiguration">
	<fval name="name"><value>Entity Store Configuration</value></fval>
	<fval name="passphraseTest"><value>aHR0cDsvL3d3dy52b3JkZWwuY29t</value></fval>
	<fval name="productKey"><value>VordelGateway</value></fval>
	<fval name="version"><value>7.7.0</value></fval>
</entity>
</entityStoreData>